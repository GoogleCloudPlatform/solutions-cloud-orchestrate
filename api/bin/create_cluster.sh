#!/bin/bash
# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

current_dir=$(dirname $(realpath ${BASH_SOURCE[0]}))
api_dir=$(dirname $current_dir)
orchestrate_dir=$(dirname $api_dir)
source $orchestrate_dir/environ.sh

cluster=orchestrate
zone=us-central1-a
network=default
subnetwork=default
# Initial version is hard-coded to match deployment.yaml
# All subsequent versions generated by updatecluster.sh will have the same
# format and be lexicographically greater than this tag.
TAG=20190619t000000

while getopts ":z:n:s:h" option; do
  case $option in
    z) zone=$OPTARG ;;
    n) network=$OPTARG ;;
    s) subnetwork=$OPTARG ;;
    \?)
      echo "Unknown option $OPTARG. See -h for more info."
      exit 1
      ;;
    :)
      echo "Expected argument for $OPTARG. See -h for more info."
      exit 1
      ;;
    h)
      echo "Usage: $(basename $0) [-z ZONE] [-n NETWORK] [-s SUBNETWORK]"
      echo "Defaults"
      echo "zone      : $zone"
      echo "network   : $network"
      echo "subnetwork: $subnetwork"
      exit 0
      ;;
  esac
done

echo "Deploying to"
echo "zone      : $zone"
echo "network   : $network"
echo "subnetwork: $subnetwork"

echo "Creating Kubernetes cluster for API..."

source $current_dir/compile_protos.sh
source $current_dir/deploy_endpoints.sh

echo "Building image $TAG..."
gcloud --project=$project builds submit --tag gcr.io/$project/orchestrate:$TAG $api_dir

echo "Creating cluster $cluster..."
gcloud --project=$project container clusters create $cluster \
  --release-channel=stable \
  --zone=$zone \
  --network=$network \
  --subnetwork=$subnetwork
gcloud --project=$project container clusters update $cluster \
  --zone=$zone \
  --logging-service=logging.googleapis.com \
  --monitoring-service=monitoring.googleapis.com

echo "Provisioning service account credentials..."
kubectl create secret generic service-account-key \
  --from-file=key.json=$ORCHESTRATE_HOME/.private/$project.json

echo "Creating deployment..."
kubectl apply -f $api_dir/deployment.yaml

echo "Done."
